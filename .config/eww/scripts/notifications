#!/usr/bin/zsh

LOG_FILE="$XDG_CONFIG_HOME/eww/scripts/notifications.txt"
IMAGE_PATH="$XDG_CACHE_HOME/image_data"

[ ! -f "$LOG" ] && touch "$LOG_FILE"
[ ! -d "$IMAGE_PATH" ] && mkdir "$IMAGE_PATH"

remove_id() {
  sed -i '/id "'$1'"/d' "$LOG_FILE"
  [[ ! -s "$LOG_FILE" ]] && dunstctl history-clear
}

clear_logs() {
  echo > "$LOG_FILE"
  dunstctl history-clear
  rm -rf $IMAGE_PATH
}

compile_caches() {
  tr -d '\n' < "$LOG_FILE"
}

make_literal() {
  local caches="$(compile_caches)"
  [[ -z "$caches" ]] \
  && echo '(box :class "empty" :height 800 :orientation "v" :space-evenly "false" (image :class "bell" :valign "end" :vexpand "true" :path "assets/bell.png" :image-width 100 :image-height 100) (label :vexpand "true" :valign "start" :class "label" :text "No Notifications"))' \
  || echo "(scroll :height 800 :vscroll true (box :orientation 'v' :class 'scroll' :spacing 10 :space-evenly 'false' $caches))"
}

subscribe() {
  make_literal
  local lines=$(wc -l < "$LOG_FILE")

  while true; do
    local new=$(wc -l < "$LOG_FILE")
    if [[ $lines -ne $new ]]; then
      lines=$new
      make_literal
    fi
  done
}

case $1 in
  --rmid) remove_id $2 ;;
  --clear) clear_logs ;;
  --sub) subscribe ;;
  --count) wc -l < $LOG_FILE ;;
esac

sed -i '/^$/d' "$LOG_FILE"
